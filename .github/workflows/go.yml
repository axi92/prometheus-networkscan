# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build-ubuntu22:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3

    - name: Install libpcap-dev
      run: sudo apt install -y libpcap-dev

    - name: Fetch mac vendor db
      run: wget "https://maclookup.app/downloads/json-database/get-db" -O src/mac-vendors-export.json

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.2

    - name: Build
      run: go build -v ./...

    - name: List dir for debug
      run: ls -lha

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: linux-with-glibc2.35
        path: prometheus-networkscan

  build-ubuntu20:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3

    - name: Install libpcap-dev
      run: sudo apt install -y libpcap-dev

    - name: Fetch mac vendor db
      run: wget "https://maclookup.app/downloads/json-database/get-db" -O src/mac-vendors-export.json

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.2

    - name: Build
      run: go build -v ./...

    - name: List dir for debug
      run: ls -lha

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: linux-with-glibc2.31
        path: prometheus-networkscan

  build-ubuntu18:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v3

    - name: Install libpcap-dev
      run: sudo apt install -y libpcap-dev

    - name: Fetch mac vendor db
      run: wget "https://maclookup.app/downloads/json-database/get-db" -O src/mac-vendors-export.json

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.2

    - name: Build
      run: go build -v ./...

    - name: List dir for debug
      run: ls -lha

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: linux-with-glibc2.27
        path: prometheus-networkscan

  build-win:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Install libpcap-dev
      run: sudo apt install -y libpcap-dev

    - name: Fetch mac vendor db
      run: wget "https://maclookup.app/downloads/json-database/get-db" -O src/mac-vendors-export.json

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.2

    - name: Build
      run: GOOS=windows GOARCH=amd64 go build -v ./...

    - name: List dir for debug
      run: ls -lha

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: windows
        path: prometheus-networkscan.exe